{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\photo-app-demo\\\\photo-app-front\\\\src\\\\core\\\\Home.js\";\nimport React, { useState, useEffect, Suspense } from 'react'; //for state object as ith grabs value from form\n\nimport Layout from './Layout';\nimport { Link } from 'react-router-dom';\nimport { getImages } from './apiCore';\nimport \"../styles.css\";\nimport ShowImage from './ShowImage';\nimport { API } from '../config';\nconst Card = React.lazy(() => import('./Card'));\n\nconst Home = () => {\n  const {\n    user,\n    token\n  } = useState([]);\n  const [imagesByLimit, setImagesByLimit] = useState([]);\n  const [imagesByDate, setImagesByDate] = useState([]);\n  const [error, setError] = useState(false);\n  const {\n    isOpen,\n    setIsOpen\n  } = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n  const [page, setPage] = useState(30);\n  useEffect(() => {\n    fetchData();\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleScroll = () => {\n    if (Math.ceil(window.innerHeight + document.documentElement.scrollTop) !== document.documentElement.offsetHeight || isFetching) return;\n    setIsFetching(true);\n  };\n\n  const loadImagesByDate = () => {\n    getImages('createdAt').then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setImagesByLimit(data);\n      }\n    });\n  };\n\n  const fetchData = () => {\n    setPage(page + 30);\n    loadImagesByLimit(page); //  const data= await result.json()\n  };\n\n  useEffect(() => {\n    if (!isFetching) return;\n    fetchMoreListItems();\n  }, [isFetching]);\n\n  const fetchMoreListItems = () => {\n    fetchData();\n    setIsFetching(false);\n  };\n\n  const loadImagesByLimit = limit => {\n    getImages('createdAt', limit).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setImagesByLimit(data);\n      }\n    });\n  }; //   useEffect(()=>{\n  //     loadImagesByDate()\n  //     loadImagesByLimit()\n  // },[])\n\n\n  return (\n    /*#__PURE__*/\n    //fvfvfvfvfv\n    React.createElement(Layout, {\n      title: \"Home Page\",\n      description: \"Node React Photo App\",\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, imagesByLimit.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column mr-4 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Suspense, {\n      fallback: /*#__PURE__*/React.createElement(\"img\", {\n        src: \"C:\\\\Users\\\\hp\\\\Desktop\\\\ecomm images\\\\react\\\\react.jpg\",\n        alt: \"Avatar\",\n        style: {\n          width: '50%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      image: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    })))), isFetching && /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 24\n      }\n    }, \"Fetching for more list items\")))\n  );\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/hp/Desktop/photo-app-demo/photo-app-front/src/core/Home.js"],"names":["React","useState","useEffect","Suspense","Layout","Link","getImages","ShowImage","API","Card","lazy","Home","user","token","imagesByLimit","setImagesByLimit","imagesByDate","setImagesByDate","error","setError","isOpen","setIsOpen","isFetching","setIsFetching","page","setPage","fetchData","window","addEventListener","handleScroll","Math","ceil","innerHeight","document","documentElement","scrollTop","offsetHeight","loadImagesByDate","then","data","loadImagesByLimit","fetchMoreListItems","limit","map","item","width"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,Suspense} from 'react'//for state object as ith grabs value from form\r\nimport Layout from './Layout'\r\nimport {Link} from 'react-router-dom'\r\nimport {getImages} from './apiCore'\r\nimport \"../styles.css\"\r\nimport ShowImage from './ShowImage';\r\nimport {API} from '../config'\r\nconst Card = React.lazy(()=> import('./Card'))\r\n\r\nconst Home=()=>{\r\n    const {user, token}=useState([])\r\n    const [imagesByLimit,setImagesByLimit]=useState([])\r\n    const [imagesByDate,setImagesByDate]=useState([])\r\n    const [error,setError]=useState(false)\r\n    const { isOpen,setIsOpen } = useState(false)\r\n\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const[page, setPage]=useState(30);\r\n\r\n    useEffect(()=>{\r\n        fetchData();\r\n        window.addEventListener('scroll', handleScroll);},[]);\r\n    \r\n\r\n    const handleScroll = () =>{\r\n        if(Math.ceil(window.innerHeight + document.documentElement.scrollTop) !== document.documentElement.offsetHeight\r\n        || isFetching) \r\n            return;\r\n        setIsFetching(true)\r\n    }\r\n\r\n\r\n    const loadImagesByDate=()=>{\r\n        getImages('createdAt').then(data=>{\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else{\r\n                setImagesByLimit(data)\r\n            }\r\n        })\r\n      }\r\n\r\n      const fetchData =()=>{\r\n          \r\n            setPage(page+30);\r\n            loadImagesByLimit(page)\r\n          //  const data= await result.json()\r\n           \r\n         \r\n      }\r\n      useEffect(()=>{\r\n          if(!isFetching)return;\r\n          fetchMoreListItems();\r\n      }, [isFetching])\r\n\r\n      const fetchMoreListItems=()=>{\r\n          fetchData();\r\n          setIsFetching(false)\r\n      }\r\n      const loadImagesByLimit=(limit)=>{\r\n        getImages('createdAt',limit).then(data=>{\r\n            if(data.error){\r\n                setError(data.error)\r\n            }else{\r\n                setImagesByLimit(data)\r\n            }\r\n        })\r\n      }\r\n\r\n    //   useEffect(()=>{\r\n    //     loadImagesByDate()\r\n    //     loadImagesByLimit()\r\n    // },[])\r\n\r\n\r\n    \r\n        \r\n     \r\n\r\n    return( //fvfvfvfvfv\r\n    <Layout title=\"Home Page\" description=\"Node React Photo App\" className=\"container-fluid\">\r\n        {/* <button class=\"button button2\"> <Link to='/upload'><font color=\"white\"> Upload</font> </Link> </button> */}\r\n        \r\n   {/* <div>\r\n\r\n        {imagesByLimit.map((image,i)=>(\r\n              \r\n        <a class=\"example-image-link mr-4\" href={`${API}/image/photo/${image._id}`}  \r\n        data-lightbox=\"roadtrip\" >\r\n            <img class=\"example-image\" src={`${API}/image/photo/${image._id}`}  alt=\"\"/></a>\r\n        ))}\r\n        </div>  */}\r\n\r\n        \r\n        <div className=\"row\">\r\n        {imagesByLimit.map((item) =>(\r\n            <div className=\"column mr-4 ml-2\">\r\n             <Suspense fallback={<img src='C:\\Users\\hp\\Desktop\\ecomm images\\react\\react.jpg' alt='Avatar'style={{width:'50%'}}/>}>\r\n            <Card image={item}/>\r\n            </Suspense>\r\n            </div>\r\n        ))}\r\n        {isFetching && <h1>Fetching for more list items</h1>}\r\n      </div>  \r\n       \r\n</Layout>\r\n \r\n    )\r\n\r\n        }\r\n        \r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}