{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\photo-app-demo\\\\photo-app-front\\\\src\\\\user\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\n\nconst Profile = ({\n  match\n}) => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false\n  });\n  const {\n    token\n  } = isAuthenticated();\n  const {\n    name,\n    email,\n    password,\n    error,\n    success\n  } = values;\n\n  const init = userId => {\n    // console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: true\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name,\n          email: data.email\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(match.params.userId);\n  }, []);\n\n  const handleChange = name => e => {\n    setValues({ ...values,\n      error: false,\n      [name]: e.target.value\n    });\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    update(match.params.userId, token, {\n      name,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        // console.log(data.error);\n        alert(data.error);\n      } else {\n        updateUser(data, () => {\n          setValues({ ...values,\n            name: data.name,\n            email: data.email,\n            success: true\n          });\n        });\n      }\n    });\n  };\n\n  const redirectUser = success => {\n    if (success) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/user/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  const profileUpdate = (name, email, password) => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange('name'),\n    className: \"form-control\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    onChange: handleChange('email'),\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    onChange: handleChange('password'),\n    className: \"form-control\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Profile\",\n    description: \"Update your profile\",\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Profile update\"), profileUpdate(name, email, password), redirectUser(success));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/hp/Desktop/photo-app-demo/photo-app-front/src/user/Profile.js"],"names":["React","useState","useEffect","Layout","isAuthenticated","Link","Redirect","read","update","updateUser","Profile","match","values","setValues","name","email","password","error","success","token","init","userId","then","data","params","handleChange","e","target","value","clickSubmit","preventDefault","alert","redirectUser","profileUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        success: false\r\n    });\r\n\r\n    const { token } = isAuthenticated();\r\n    const { name, email, password, error, success } = values;\r\n\r\n    const init = userId => {\r\n        // console.log(userId);\r\n        read(userId, token).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: true });\r\n            } else {\r\n                setValues({ ...values, name: data.name, email: data.email });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.userId);\r\n    }, []);\r\n\r\n    const handleChange = name => e => {\r\n        setValues({ ...values, error: false, [name]: e.target.value });\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        update(match.params.userId, token, { name, email, password }).then(data => {\r\n            if (data.error) {\r\n                // console.log(data.error);\r\n                alert(data.error);\r\n            } else {\r\n                updateUser(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        success: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const redirectUser = success => {\r\n        if (success) {\r\n            return <Redirect to=\"/user/dashboard\" />;\r\n        }\r\n    };\r\n\r\n    const profileUpdate = (name, email, password) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\">Profile update</h2>\r\n            {profileUpdate(name, email, password)}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}