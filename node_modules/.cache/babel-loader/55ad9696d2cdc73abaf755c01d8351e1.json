{"ast":null,"code":"import { API } from '../config';\nexport const read = (userId, token) => {\n  return fetch(`${API}/user/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const update = (userId, token, user) => {\n  return fetch(`${API}/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateUser = (user, next) => {\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('jwt')) {\n      let auth = JSON.parse(localStorage.getItem('jwt'));\n      auth.user = user;\n      localStorage.setItem('jwt', JSON.stringify(auth));\n      next();\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/hp/Desktop/photo-app-demo/photo-app-front/src/user/apiUser.js"],"names":["API","read","userId","token","fetch","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","update","user","body","JSON","stringify","updateUser","next","window","localStorage","getItem","auth","parse","setItem"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,WAAlB;AAEA,OAAO,MAAMC,IAAI,GAAE,CAACC,MAAD,EAAQC,KAAR,KAAiB;AAChC,SAAOC,KAAK,CAAE,GAAEJ,GAAI,SAAQE,MAAO,EAAvB,EAA0B;AAClCG,IAAAA,MAAM,EAAE,KAD0B;AAElCC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAe,kBAFX;AAGJC,MAAAA,aAAa,EAAE,UAASL,KAAM;AAH1B;AAF0B,GAA1B,CAAL,CAQFM,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMG,MAAM,GAAE,CAACd,MAAD,EAAQC,KAAR,EAAcc,IAAd,KAAsB;AACvC,SAAOb,KAAK,CAAE,GAAEJ,GAAI,SAAQE,MAAO,EAAvB,EAA0B;AAClCG,IAAAA,MAAM,EAAE,KAD0B;AAElCC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAe,kBAFX;AAGJC,MAAAA,aAAa,EAAE,UAASL,KAAM;AAH1B,KAF0B;AAOlCe,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAP6B,GAA1B,CAAL,CASFR,IATE,CASGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZX,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMQ,UAAU,GAAC,CAACJ,IAAD,EAAMK,IAAN,KAAa;AACrC,MAAG,OAAOC,MAAP,KAAgB,WAAnB,EAA+B;AAC3B,QAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAH,EAA+B;AAC3B,UAAIC,IAAI,GAACP,IAAI,CAACQ,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAT;AACAC,MAAAA,IAAI,CAACT,IAAL,GAAUA,IAAV;AACAO,MAAAA,YAAY,CAACI,OAAb,CAAqB,KAArB,EAA2BT,IAAI,CAACC,SAAL,CAAeM,IAAf,CAA3B;AACAJ,MAAAA,IAAI;AACP;AACJ;AACA,CATM","sourcesContent":["import {API} from '../config'\r\n\r\nexport const read =(userId,token)=> {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const update =(userId,token,user)=> {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"PUT\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            \"Content-Type\":\"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateUser=(user,next)=>{\r\nif(typeof window!=='undefined'){\r\n    if(localStorage.getItem('jwt')){\r\n        let auth=JSON.parse(localStorage.getItem('jwt'))\r\n        auth.user=user\r\n        localStorage.setItem('jwt',JSON.stringify(auth))\r\n        next();\r\n    }\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}